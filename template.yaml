Transform: AWS::Serverless-2016-10-31

Resources:

  TestingPipelineExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Ref DeploymentUserArnAsString
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: TestingExecutionRolePermissions
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                - "ssm:Describe*"
                - "ssm:Get*"
                - "ssm:List*"
                Resource: "*"
                Effect: "Allow"
              - Action:
                - "events:PutEvents"
                Resource: !Ref EventbridgethiscoveryeventbusArnAsString
                Effect: "Allow"
              - Action:
                - "secretsmanager:GetSecretValue"
                Resource: "*"
                Effect: "Allow"
              - Action:
                - "dynamodb:PutItem"
                - "dynamodb:UpdateItem"
                - "dynamodb:DeleteItem"
                - "dynamodb:BatchWriteItem"
                - "dynamodb:GetItem"
                - "dynamodb:BatchGetItem"
                - "dynamodb:Scan"
                - "dynamodb:Query"
                - "dynamodb:ConditionCheckItem"
                Resource: "*"
                Effect: "Allow"
              - Action:
                  - "lambda:InvokeFunction"
                Resource: "*"
                Effect: "Allow"
              - Action:
                  - "logs:DescribeLogStreams"
                  - "logs:GetLogEvents"
                  - "logs:StartQuery"
                  - "logs:GetQueryResults"
                Resource: "*"
                Effect: "Allow"
      RoleName: !Sub ${AWS::StackName}-${AWS::Region}-TestingExec
      Tags:
        - Key: "Role"
          Value: "pipeline-execution-role"


Parameters:
  StackTagName:
    Type: String
    Description: Stack Name (injected by Stackery at deployment time)
  DeploymentUserArnAsString:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /<EnvironmentName>/deployment-user/arn
  EnvironmentTagName:
    Type: String
    Description: Environment Name (injected by Stackery at deployment time)
  EnvConfigeventbridgethiscoveryeventbusAsString:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /<EnvironmentName>/eventbridge/thiscovery-event-bus
  EventbridgethiscoveryeventbusArnAsString:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /<EnvironmentName>/eventbridge/thiscovery-event-bus-arn


Metadata:
  EnvConfigParameters:
    EnvConfiglambdamemorysizeAsString: lambda.memory-size
    EnvConfiglambdatimeoutAsString: lambda.timeout
    EnvConfigeventbridgethiscoveryeventbusAsString: eventbridge.thiscovery-event-bus